{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cb7d790b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from selenium import webdriver\n",
    "import time\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "from selenium.webdriver.common.by import By \n",
    "\n",
    "#inicio identificando qual navegador será aberto\n",
    "browser = webdriver.Edge()\n",
    "\n",
    "#busco a página desejada \n",
    "browser.get(#inserir o link entra aspas simples)\n",
    "\n",
    "\n",
    "browser.find_element('xpath','//*[@id=\"ak-jira-navigation\"]/header/div/a/div/button/span/span').click()\n",
    "\n",
    "#como eu uso para trabalho, tenho que enviar meu login, defino o valor em variaveis.\n",
    "\n",
    "login = #login sem aspas simples\n",
    "senha = #senha em aspas simples \n",
    "\n",
    "#defino os campos onde irei inserir os valores através do xpath\n",
    "email = browser.find_element('xpath','//*[@id=\"username\"]')\n",
    "password = browser.find_element('xpath','//*[@id=\"password\"]')\n",
    "\n",
    "#seleciono o campo e em seguida envio o valor, no meu caso minha variavel email\n",
    "email.click()\n",
    "#mas poderia passar o valor direto ao inves da variavel \n",
    "email.send_keys(login)\n",
    "\n",
    "#faço o mesmo para senha \n",
    "browser.find_element('xpath','//*[@id=\"login-submit\"]/span').click()\n",
    "time.sleep(5)\n",
    "\n",
    "password.click()\n",
    "password.send_keys(senha)\n",
    "\n",
    "browser.find_element('xpath','//*[@id=\"login-submit\"]/span').click()\n",
    "time.sleep(25)\n",
    "\n",
    "    \n",
    "#aqui são elementos de pesquisa, não irei entrar muito em detalhes, pois é pessoal \n",
    "try:\n",
    "    pesquisa = browser.find_element('xpath','//*[@id=\"advanced-search\"]')\n",
    "\n",
    "except:\n",
    "    browser.find_element('xpath','//*[@id=\"global-issue-navigator-container\"]/div[2]/div/form/div[1]/div[1]/div[1]/div[2]/div/a[1]').click()\n",
    "    pesquisa = browser.find_element('xpath','//*[@id=\"advanced-search\"]')\n",
    "\n",
    "pesquisa.click()\n",
    "pesquisa.send_keys(Keys.CONTROL + 'a')\n",
    "pesquisa.send_keys(Keys.DELETE)\n",
    "pesquisa.send_keys(#neste campo adiciono oque quero pesquisar dentro do sistema)\n",
    "\n",
    "#realizo a pesquisa e espero 10 segundos\n",
    "browser.find_element('xpath','//*[@id=\"global-issue-navigator-container\"]/div[2]/div/form/div[1]/div[1]/div[1]/div[2]/button').click()\n",
    "time.sleep(10)\n",
    "\n",
    "#dados_paginas ira armazenar meus dados em um array caso exista mais de uma pagina \n",
    "dados_paginas = []\n",
    "#meu contador iniciado com 1\n",
    "cont = 1\n",
    "#minha extrutura de repetição, caso aja mais paginas eu adiciono o valor desejado para percorrer as paginas desejadas \n",
    "\n",
    "    while cont < #insiro o valor de paginas aqui:\n",
    "    try:\n",
    "    #resumo seria em extrair os dados da tabela encontrada, armazenar em um array, em seguida ir para a próxima página\n",
    "        time.sleep(5)\n",
    "        dados = browser.find_element('id', 'issuetable')\n",
    "        lista = dados.get_attribute(\"outerHTML\")\n",
    "        tabela = pd.read_html(str(lista))[0]\n",
    "        dados_paginas.append(tabela)\n",
    "\n",
    "        xpath = '//*[@id=\"global-issue-navigator-container\"]/div[2]/div/div/div/div/div/div/div[4]/div[2]/div/a[' + str(cont+1) + ']'\n",
    "        button_click = None\n",
    "        while button_click is None:\n",
    "            try:\n",
    "                button_click = browser.find_element('xpath', xpath)\n",
    "            except NoSuchElementException:\n",
    "                print(\"Botão não encontrado. Tentando novamente em 2 segundos.\")\n",
    "                time.sleep(2)\n",
    "\n",
    "        button_click.click()\n",
    "        time.sleep(10)\n",
    "        cont += 1\n",
    "        \n",
    "        # Aguardar a página carregar completamente antes de prosseguir\n",
    "        WebDriverWait(browser, 10).until(\n",
    "            EC.presence_of_element_located((By.ID, 'issuetable'))\n",
    "        )\n",
    "    except Exception as e:\n",
    "        print(\"Ocorreu uma exceção:\", str(e))\n",
    "time.sleep(5)\n",
    "    \n",
    "#utilizo a biblioteca pandas para receber os dados, concactenando-os em uma tabela excel\n",
    "dados = browser.find_element('id', 'issuetable')\n",
    "lista = dados.get_attribute(\"outerHTML\")\n",
    "tabela = pd.read_html(str(lista))[0]\n",
    "dados_paginas.append(tabela)\n",
    "\n",
    "tabela_completa = pd.concat(dados_paginas) \n",
    "tabela_completa.to_excel(r'C:\\Users\\restante do caminho para chegar no arquivo excel', index=False)\n",
    "browser.quit()\n",
    "    #por fim fecho o navegador \n",
    "\n",
    "print (\"dados extraidos\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
